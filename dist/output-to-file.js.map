{"version":3,"file":"output-to-file.js","sources":["../src/output-to-file.ts"],"sourcesContent":["import { Parameter } from '@aws-sdk/client-ssm';\nimport { formatter, isValidFormat } from './format/index.js';\nimport { appendFileSync, existsSync, writeFileSync } from 'fs';\n\nexport interface OutputToFileOptions {\n  format: string;\n  prefix?: string;\n}\n\nexport async function outputToFile(\n  parameters: Parameter[],\n  filename: string,\n  { format, prefix }: OutputToFileOptions,\n): Promise<void> {\n  if (!isValidFormat(format)) {\n    throw new Error(`invalid format: ${format}`);\n  }\n\n  const envs = parameters\n    .map<Parameter>(p => ({\n      Value: p.Value,\n      Name: p.Name.split('/').pop(),\n    }))\n    .map<string>(formatter(format)(prefix));\n\n  if (envs.length > 0) {\n    envs.push('\\n');\n  }\n\n  if (existsSync(filename)) {\n    console.log(`append to ${filename} file`);\n    appendFileSync(filename, '\\n' + envs.join('\\n'));\n  } else {\n    console.log(`create ${filename} file`);\n    writeFileSync(filename, envs.join('\\n'));\n  }\n}\n"],"names":[],"mappings":";;;AASO,eAAe,YAAY,CAChC,UAAuB,EACvB,QAAgB,EAChB,EAAE,MAAM,EAAE,MAAM,EAAuB,EAAA;AAEvC,IAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;AAC1B,QAAA,MAAM,IAAI,KAAK,CAAC,mBAAmB,MAAM,CAAA,CAAE,CAAC;IAC9C;IAEA,MAAM,IAAI,GAAG;AACV,SAAA,GAAG,CAAY,CAAC,KAAK;QACpB,KAAK,EAAE,CAAC,CAAC,KAAK;QACd,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;AAC9B,KAAA,CAAC;SACD,GAAG,CAAS,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;AAEzC,IAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACjB;AAEA,IAAA,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AACxB,QAAA,OAAO,CAAC,GAAG,CAAC,aAAa,QAAQ,CAAA,KAAA,CAAO,CAAC;AACzC,QAAA,cAAc,CAAC,QAAQ,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD;SAAO;AACL,QAAA,OAAO,CAAC,GAAG,CAAC,UAAU,QAAQ,CAAA,KAAA,CAAO,CAAC;QACtC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C;AACF;;;;"}