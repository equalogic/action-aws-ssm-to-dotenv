{"version":3,"file":"cli.js","sources":["../src/cli.ts"],"sourcesContent":["import parseArgs from 'minimist';\nimport { outputToFile } from './output-to-file.js';\nimport { fetchParameters } from './fetch-parameters.js';\n\nconst USAGE_HELP =\n  'Usage: ssm-to-file --path <ssm-path> [--region <region>] [--prefix <prefix>] [--format (dotenv|shell|yaml)] [--decrypt] [filename]';\n\nconst cliArgs = parseArgs(process.argv.slice(2), {\n  string: ['path', 'region', 'prefix', 'format'],\n  boolean: ['decrypt'],\n  default: {\n    region: process.env.AWS_DEFAULT_REGION,\n    format: 'dotenv',\n  },\n});\n\nif (!cliArgs.path) {\n  console.error('path is required');\n  console.log(USAGE_HELP);\n  process.exit(1);\n}\n\nif (!cliArgs.region) {\n  console.error('region is required');\n  console.log(USAGE_HELP);\n  process.exit(1);\n}\n\nconst parameters = await fetchParameters(cliArgs.path, {\n  region: cliArgs.region,\n  withDecryption: cliArgs.decrypt,\n});\n\nawait outputToFile(parameters, cliArgs._[0] ?? '.env', {\n  format: cliArgs.format,\n  prefix: cliArgs.prefix,\n});\n"],"names":[],"mappings":";;;;AAIA,MAAM,UAAU,GACd,oIAAoI;AAEtI,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IAC/C,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC9C,OAAO,EAAE,CAAC,SAAS,CAAC;AACpB,IAAA,OAAO,EAAE;AACP,QAAA,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;AACtC,QAAA,MAAM,EAAE,QAAQ;AACjB,KAAA;AACF,CAAA,CAAC;AAEF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACjB,IAAA,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC;AACjC,IAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;AACvB,IAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB;AAEA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACnB,IAAA,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC;AACnC,IAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;AACvB,IAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB;AAEA,MAAM,UAAU,GAAG,MAAM,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE;IACrD,MAAM,EAAE,OAAO,CAAC,MAAM;IACtB,cAAc,EAAE,OAAO,CAAC,OAAO;AAChC,CAAA,CAAC;AAEF,MAAM,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;IACrD,MAAM,EAAE,OAAO,CAAC,MAAM;IACtB,MAAM,EAAE,OAAO,CAAC,MAAM;AACvB,CAAA,CAAC"}