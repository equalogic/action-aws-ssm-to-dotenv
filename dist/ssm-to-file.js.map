{"version":3,"file":"ssm-to-file.js","sources":["../src/ssm-to-file.ts"],"sourcesContent":["import { GetParametersByPathResult, Parameter, SSM } from '@aws-sdk/client-ssm';\nimport { formatter, isValidFormat } from './format/index.js';\nimport { appendFileSync, existsSync, writeFileSync } from 'fs';\n\nexport interface SsmToFileArgs {\n  region: string;\n  ssmPath: string;\n  format: string;\n  output: string;\n  prefix?: string;\n  withDecryption?: boolean;\n}\n\nexport async function ssmToFile({\n  region,\n  ssmPath,\n  format,\n  output,\n  prefix,\n  withDecryption,\n}: SsmToFileArgs): Promise<void> {\n  if (!isValidFormat(format)) {\n    throw new Error(`invalid format: ${format}`);\n  }\n\n  const ssm = new SSM({ region });\n\n  const allParameters: Parameter[] = [];\n  let nextToken: string | undefined = undefined;\n\n  do {\n    const result: GetParametersByPathResult = await ssm.getParametersByPath({\n      WithDecryption: withDecryption,\n      Path: ssmPath,\n      Recursive: true,\n      NextToken: nextToken,\n    });\n\n    nextToken = result.NextToken;\n    allParameters.push(...result.Parameters);\n  } while (nextToken);\n\n  const envs = allParameters\n    .map<Parameter>(p => ({\n      Value: p.Value,\n      Name: p.Name.split('/').pop(),\n    }))\n    .map<string>(formatter(format)(prefix));\n\n  if (envs.length > 0) {\n    envs.push('\\n');\n  }\n\n  if (existsSync(output)) {\n    console.log(`append to ${output} file`);\n    appendFileSync(output, '\\n' + envs.join('\\n'));\n  } else {\n    console.log(`create ${output} file`);\n    writeFileSync(output, envs.join('\\n'));\n  }\n}\n"],"names":[],"mappings":";;;;AAaO,eAAe,SAAS,CAAC,EAC9B,MAAM,EACN,OAAO,EACP,MAAM,EACN,MAAM,EACN,MAAM,EACN,cAAc,GACA,EAAA;AACd,IAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;AAC1B,QAAA,MAAM,IAAI,KAAK,CAAC,mBAAmB,MAAM,CAAA,CAAE,CAAC;IAC9C;IAEA,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC;IAE/B,MAAM,aAAa,GAAgB,EAAE;IACrC,IAAI,SAAS,GAAuB,SAAS;AAE7C,IAAA,GAAG;AACD,QAAA,MAAM,MAAM,GAA8B,MAAM,GAAG,CAAC,mBAAmB,CAAC;AACtE,YAAA,cAAc,EAAE,cAAc;AAC9B,YAAA,IAAI,EAAE,OAAO;AACb,YAAA,SAAS,EAAE,IAAI;AACf,YAAA,SAAS,EAAE,SAAS;AACrB,SAAA,CAAC;AAEF,QAAA,SAAS,GAAG,MAAM,CAAC,SAAS;QAC5B,aAAa,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;IAC1C,CAAC,QAAQ,SAAS;IAElB,MAAM,IAAI,GAAG;AACV,SAAA,GAAG,CAAY,CAAC,KAAK;QACpB,KAAK,EAAE,CAAC,CAAC,KAAK;QACd,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;AAC9B,KAAA,CAAC;SACD,GAAG,CAAS,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;AAEzC,IAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACjB;AAEA,IAAA,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;AACtB,QAAA,OAAO,CAAC,GAAG,CAAC,aAAa,MAAM,CAAA,KAAA,CAAO,CAAC;AACvC,QAAA,cAAc,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD;SAAO;AACL,QAAA,OAAO,CAAC,GAAG,CAAC,UAAU,MAAM,CAAA,KAAA,CAAO,CAAC;QACpC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC;AACF;;;;"}