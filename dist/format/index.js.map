{"version":3,"file":"index.js","sources":["../../src/format/index.ts"],"sourcesContent":["import { formatShell } from './shell.js';\nimport { formatDotenv } from './dotenv.js';\nimport { formatYaml } from './yaml.js';\n\nexport type Format = 'dotenv' | 'shell' | 'yaml';\n\nexport type Formatter = (p: { Name: string; Value: string }) => string;\n\nexport type FormatterFactory = (prefix?: string) => Formatter;\n\nexport function isValidFormat(type: string): type is Format {\n  return ['dotenv', 'shell', 'yaml'].includes(type);\n}\n\nexport function formatter(type: Format): FormatterFactory {\n  switch (type) {\n    case 'shell':\n      return formatShell;\n    case 'dotenv':\n      return formatDotenv;\n    case 'yaml':\n      return formatYaml;\n    default:\n      throw new Error(`invalid format: ${type}`);\n  }\n}\n"],"names":[],"mappings":";;;;AAUM,SAAU,aAAa,CAAC,IAAY,EAAA;AACxC,IAAA,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;AACnD;AAEM,SAAU,SAAS,CAAC,IAAY,EAAA;IACpC,QAAQ,IAAI;AACV,QAAA,KAAK,OAAO;AACV,YAAA,OAAO,WAAW;AACpB,QAAA,KAAK,QAAQ;AACX,YAAA,OAAO,YAAY;AACrB,QAAA,KAAK,MAAM;AACT,YAAA,OAAO,UAAU;AACnB,QAAA;AACE,YAAA,MAAM,IAAI,KAAK,CAAC,mBAAmB,IAAI,CAAA,CAAE,CAAC;;AAEhD;;;;"}