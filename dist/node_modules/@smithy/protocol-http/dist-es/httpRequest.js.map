{"version":3,"file":"httpRequest.js","sources":["../../../../../node_modules/@smithy/protocol-http/dist-es/httpRequest.js"],"sourcesContent":["export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static clone(request) {\n        const cloned = new HttpRequest({\n            ...request,\n            headers: { ...request.headers },\n        });\n        if (cloned.query) {\n            cloned.query = cloneQuery(cloned.query);\n        }\n        return cloned;\n    }\n    static isInstance(request) {\n        if (!request) {\n            return false;\n        }\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        return HttpRequest.clone(this);\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n"],"names":[],"mappings":"AAAO,MAAM,WAAW,CAAC;AACzB,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,KAAK;AAC7C,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,WAAW;AACvD,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;AAChC,QAAQ,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE;AACxC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE;AAC5C,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;AAChC,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAChC,cAAc,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK;AAC7C,kBAAkB,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;AACvC,kBAAkB,OAAO,CAAC;AAC1B,cAAc,QAAQ;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,IAAI,GAAG;AAC7G,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;AACxC,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;AACxC,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;AACxC,IAAI;AACJ,IAAI,OAAO,KAAK,CAAC,OAAO,EAAE;AAC1B,QAAQ,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC;AACvC,YAAY,GAAG,OAAO;AACtB,YAAY,OAAO,EAAE,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE;AAC3C,SAAS,CAAC;AACV,QAAQ,IAAI,MAAM,CAAC,KAAK,EAAE;AAC1B,YAAY,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;AACnD,QAAQ;AACR,QAAQ,OAAO,MAAM;AACrB,IAAI;AACJ,IAAI,OAAO,UAAU,CAAC,OAAO,EAAE;AAC/B,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,YAAY,OAAO,KAAK;AACxB,QAAQ;AACR,QAAQ,MAAM,GAAG,GAAG,OAAO;AAC3B,QAAQ,QAAQ,QAAQ,IAAI,GAAG;AAC/B,YAAY,UAAU,IAAI,GAAG;AAC7B,YAAY,UAAU,IAAI,GAAG;AAC7B,YAAY,MAAM,IAAI,GAAG;AACzB,YAAY,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,QAAQ;AAC5C,YAAY,OAAO,GAAG,CAAC,SAAS,CAAC,KAAK,QAAQ;AAC9C,IAAI;AACJ,IAAI,KAAK,GAAG;AACZ,QAAQ,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;AACtC,IAAI;AACJ;AACA,SAAS,UAAU,CAAC,KAAK,EAAE;AAC3B,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,SAAS,KAAK;AAC3D,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;AACtC,QAAQ,OAAO;AACf,YAAY,GAAG,KAAK;AACpB,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK;AAClE,SAAS;AACT,IAAI,CAAC,EAAE,EAAE,CAAC;AACV;;;;","x_google_ignoreList":[0]}