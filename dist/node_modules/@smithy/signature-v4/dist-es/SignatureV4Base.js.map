{"version":3,"file":"SignatureV4Base.js","sources":["../../../../../node_modules/@smithy/signature-v4/dist-es/SignatureV4Base.js"],"sourcesContent":["import { toHex } from \"@smithy/util-hex-encoding\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nimport { escapeUri } from \"@smithy/util-uri-escape\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4Base {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest, algorithmIdentifier) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${algorithmIdentifier}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = escapeUri(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n    formatDate(now) {\n        const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n        return {\n            longDate,\n            shortDate: longDate.slice(0, 8),\n        };\n    }\n    getCanonicalHeaderList(headers) {\n        return Object.keys(headers).sort().join(\";\");\n    }\n}\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}