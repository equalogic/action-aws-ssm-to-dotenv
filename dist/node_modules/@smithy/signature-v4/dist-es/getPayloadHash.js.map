{"version":3,"file":"getPayloadHash.js","sources":["../../../../../node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js"],"sourcesContent":["import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n"],"names":[],"mappings":";;;;;;AAIY,MAAC,cAAc,GAAG,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,eAAe,KAAK;AAC5E,IAAI,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AACnD,QAAQ,IAAI,UAAU,CAAC,WAAW,EAAE,KAAK,aAAa,EAAE;AACxD,YAAY,OAAO,OAAO,CAAC,UAAU,CAAC;AACtC,QAAQ;AACR,IAAI;AACJ,IAAI,IAAI,IAAI,IAAI,SAAS,EAAE;AAC3B,QAAQ,OAAO,kEAAkE;AACjF,IAAI;AACJ,SAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;AAC1F,QAAQ,MAAM,QAAQ,GAAG,IAAI,eAAe,EAAE;AAC9C,QAAQ,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC3C,QAAQ,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC7C,IAAI;AACJ,IAAI,OAAO,gBAAgB;AAC3B;;;;","x_google_ignoreList":[0]}