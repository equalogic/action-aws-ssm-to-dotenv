{"version":3,"file":"index.js","sources":["../../../../../node_modules/@smithy/service-error-classification/dist-es/index.js"],"sourcesContent":["import { CLOCK_SKEW_ERROR_CODES, NODEJS_NETWORK_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isClockSkewCorrectedError = (error) => error.$metadata?.clockSkewCorrected;\nexport const isBrowserNetworkError = (error) => {\n    const errorMessages = new Set([\n        \"Failed to fetch\",\n        \"NetworkError when attempting to fetch resource\",\n        \"The Internet connection appears to be offline\",\n        \"Load failed\",\n        \"Network request failed\",\n    ]);\n    const isValid = error && error instanceof TypeError;\n    if (!isValid) {\n        return false;\n    }\n    return errorMessages.has(error.message);\n};\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error, depth = 0) => isClockSkewCorrectedError(error) ||\n    TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    NODEJS_NETWORK_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0) ||\n    isBrowserNetworkError(error) ||\n    (error.cause !== undefined && depth <= 10 && isTransientError(error.cause, depth + 1));\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n"],"names":[],"mappings":";;AAGY,MAAC,yBAAyB,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,SAAS,EAAE;AACzD,MAAC,qBAAqB,GAAG,CAAC,KAAK,KAAK;AAChD,IAAI,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC;AAClC,QAAQ,iBAAiB;AACzB,QAAQ,gDAAgD;AACxD,QAAQ,+CAA+C;AACvD,QAAQ,aAAa;AACrB,QAAQ,wBAAwB;AAChC,KAAK,CAAC;AACN,IAAI,MAAM,OAAO,GAAG,KAAK,IAAI,KAAK,YAAY,SAAS;AACvD,IAAI,IAAI,CAAC,OAAO,EAAE;AAClB,QAAQ,OAAO,KAAK;AACpB,IAAI;AACJ,IAAI,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AAC3C;AACY,MAAC,iBAAiB,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,SAAS,EAAE,cAAc,KAAK,GAAG;AACnF,IAAI,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;AAC/C,IAAI,KAAK,CAAC,UAAU,EAAE,UAAU,IAAI;AACxB,MAAC,gBAAgB,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,KAAK,yBAAyB,CAAC,KAAK,CAAC;AACtF,IAAI,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;AAC9C,IAAI,0BAA0B,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC;AAC1D,IAAI,0BAA0B,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC;AAC1D,IAAI,4BAA4B,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,cAAc,IAAI,CAAC,CAAC;AAC/E,IAAI,qBAAqB,CAAC,KAAK,CAAC;AAChC,KAAK,KAAK,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,IAAI,EAAE,IAAI,gBAAgB,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC;AAC7E,MAAC,aAAa,GAAG,CAAC,KAAK,KAAK;AACxC,IAAI,IAAI,KAAK,CAAC,SAAS,EAAE,cAAc,KAAK,SAAS,EAAE;AACvD,QAAQ,MAAM,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,cAAc;AACzD,QAAQ,IAAI,GAAG,IAAI,UAAU,IAAI,UAAU,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;AAChF,YAAY,OAAO,IAAI;AACvB,QAAQ;AACR,QAAQ,OAAO,KAAK;AACpB,IAAI;AACJ,IAAI,OAAO,KAAK;AAChB;;;;","x_google_ignoreList":[0]}