import { Uint8ArrayBlobAdapter } from '../../../../util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js';
import 'buffer';
import 'stream';
import 'node:stream';
import '../../../../types/dist-es/auth/auth.js';
import '../../../../types/dist-es/auth/HttpApiKeyAuth.js';
import '../../../../types/dist-es/endpoint.js';
import '../../../../types/dist-es/extensions/checksum.js';
import '../../../../types/dist-es/http.js';
import '../../../../types/dist-es/profile.js';
import '../../../../types/dist-es/transfer.js';
import 'http';
import 'https';
import 'http2';
import '../../../../util-hex-encoding/dist-es/index.js';

const collectBody = async (streamBody = new Uint8Array(), context) => {
    if (streamBody instanceof Uint8Array) {
        return Uint8ArrayBlobAdapter.mutate(streamBody);
    }
    if (!streamBody) {
        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());
    }
    const fromContext = context.streamCollector(streamBody);
    return Uint8ArrayBlobAdapter.mutate(await fromContext);
};

export { collectBody };
//# sourceMappingURL=collect-stream-body.js.map
