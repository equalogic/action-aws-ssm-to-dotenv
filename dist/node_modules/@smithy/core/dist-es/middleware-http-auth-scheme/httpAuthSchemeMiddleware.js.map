{"version":3,"file":"httpAuthSchemeMiddleware.js","sources":["../../../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js"],"sourcesContent":["import { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nimport { resolveAuthOptions } from \"./resolveAuthOptions\";\nfunction convertHttpAuthSchemesToMap(httpAuthSchemes) {\n    const map = new Map();\n    for (const scheme of httpAuthSchemes) {\n        map.set(scheme.schemeId, scheme);\n    }\n    return map;\n}\nexport const httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {\n    const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));\n    const authSchemePreference = config.authSchemePreference ? await config.authSchemePreference() : [];\n    const resolvedOptions = resolveAuthOptions(options, authSchemePreference);\n    const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);\n    const smithyContext = getSmithyContext(context);\n    const failureReasons = [];\n    for (const option of resolvedOptions) {\n        const scheme = authSchemes.get(option.schemeId);\n        if (!scheme) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` was not enabled for this service.`);\n            continue;\n        }\n        const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));\n        if (!identityProvider) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` did not have an IdentityProvider configured.`);\n            continue;\n        }\n        const { identityProperties = {}, signingProperties = {} } = option.propertiesExtractor?.(config, context) || {};\n        option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);\n        option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);\n        smithyContext.selectedHttpAuthScheme = {\n            httpAuthOption: option,\n            identity: await identityProvider(option.identityProperties),\n            signer: scheme.signer,\n        };\n        break;\n    }\n    if (!smithyContext.selectedHttpAuthScheme) {\n        throw new Error(failureReasons.join(\"\\n\"));\n    }\n    return next(args);\n};\n"],"names":[],"mappings":";;;;;;;;;;AAGA,SAAS,2BAA2B,CAAC,eAAe,EAAE;AACtD,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE;AACzB,IAAI,KAAK,MAAM,MAAM,IAAI,eAAe,EAAE;AAC1C,QAAQ,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;AACxC,IAAI;AACJ,IAAI,OAAO,GAAG;AACd;AACY,MAAC,wBAAwB,GAAG,CAAC,MAAM,EAAE,SAAS,KAAK,CAAC,IAAI,EAAE,OAAO,KAAK,OAAO,IAAI,KAAK;AAClG,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,sBAAsB,CAAC,MAAM,SAAS,CAAC,gCAAgC,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAChI,IAAI,MAAM,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,GAAG,MAAM,MAAM,CAAC,oBAAoB,EAAE,GAAG,EAAE;AACvG,IAAI,MAAM,eAAe,GAAG,kBAAkB,CAAC,OAAO,EAAE,oBAAoB,CAAC;AAC7E,IAAI,MAAM,WAAW,GAAG,2BAA2B,CAAC,MAAM,CAAC,eAAe,CAAC;AAC3E,IAAI,MAAM,aAAa,GAAG,gBAAgB,CAAC,OAAO,CAAC;AACnD,IAAI,MAAM,cAAc,GAAG,EAAE;AAC7B,IAAI,KAAK,MAAM,MAAM,IAAI,eAAe,EAAE;AAC1C,QAAQ,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;AACvD,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB,YAAY,cAAc,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,MAAM,CAAC,QAAQ,CAAC,oCAAoC,CAAC,CAAC;AAC1G,YAAY;AACZ,QAAQ;AACR,QAAQ,MAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,SAAS,CAAC,8BAA8B,CAAC,MAAM,CAAC,CAAC;AAChH,QAAQ,IAAI,CAAC,gBAAgB,EAAE;AAC/B,YAAY,cAAc,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,MAAM,CAAC,QAAQ,CAAC,+CAA+C,CAAC,CAAC;AACrH,YAAY;AACZ,QAAQ;AACR,QAAQ,MAAM,EAAE,kBAAkB,GAAG,EAAE,EAAE,iBAAiB,GAAG,EAAE,EAAE,GAAG,MAAM,CAAC,mBAAmB,GAAG,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE;AACvH,QAAQ,MAAM,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,IAAI,EAAE,EAAE,kBAAkB,CAAC;AACtG,QAAQ,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,IAAI,EAAE,EAAE,iBAAiB,CAAC;AACnG,QAAQ,aAAa,CAAC,sBAAsB,GAAG;AAC/C,YAAY,cAAc,EAAE,MAAM;AAClC,YAAY,QAAQ,EAAE,MAAM,gBAAgB,CAAC,MAAM,CAAC,kBAAkB,CAAC;AACvE,YAAY,MAAM,EAAE,MAAM,CAAC,MAAM;AACjC,SAAS;AACT,QAAQ;AACR,IAAI;AACJ,IAAI,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE;AAC/C,QAAQ,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClD,IAAI;AACJ,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC;AACrB;;;;","x_google_ignoreList":[0]}