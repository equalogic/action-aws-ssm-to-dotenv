{"version":3,"file":"getInstanceMetadataEndpoint.js","sources":["../../../../../../node_modules/@smithy/credential-provider-imds/dist-es/utils/getInstanceMetadataEndpoint.js"],"sourcesContent":["import { loadConfig } from \"@smithy/node-config-provider\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { Endpoint as InstanceMetadataEndpoint } from \"../config/Endpoint\";\nimport { ENDPOINT_CONFIG_OPTIONS } from \"../config/EndpointConfigOptions\";\nimport { EndpointMode } from \"../config/EndpointMode\";\nimport { ENDPOINT_MODE_CONFIG_OPTIONS, } from \"../config/EndpointModeConfigOptions\";\nexport const getInstanceMetadataEndpoint = async () => parseUrl((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nconst getFromEndpointConfig = async () => loadConfig(ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await loadConfig(ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode.IPv4:\n            return InstanceMetadataEndpoint.IPv4;\n        case EndpointMode.IPv6:\n            return InstanceMetadataEndpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode)}`);\n    }\n};\n"],"names":["InstanceMetadataEndpoint"],"mappings":";;;;;;;AAMY,MAAC,2BAA2B,GAAG,YAAY,QAAQ,CAAC,CAAC,MAAM,qBAAqB,EAAE,MAAM,MAAM,yBAAyB,EAAE,CAAC;AACtI,MAAM,qBAAqB,GAAG,YAAY,UAAU,CAAC,uBAAuB,CAAC,EAAE;AAC/E,MAAM,yBAAyB,GAAG,YAAY;AAC9C,IAAI,MAAM,YAAY,GAAG,MAAM,UAAU,CAAC,4BAA4B,CAAC,EAAE;AACzE,IAAI,QAAQ,YAAY;AACxB,QAAQ,KAAK,YAAY,CAAC,IAAI;AAC9B,YAAY,OAAOA,QAAwB,CAAC,IAAI;AAChD,QAAQ,KAAK,YAAY,CAAC,IAAI;AAC9B,YAAY,OAAOA,QAAwB,CAAC,IAAI;AAChD,QAAQ;AACR,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,2BAA2B,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC1H;AACA,CAAC;;;;","x_google_ignoreList":[0]}