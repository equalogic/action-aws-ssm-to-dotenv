{"version":3,"file":"evaluateRules.js","sources":["../../../../../../node_modules/@smithy/util-endpoints/dist-es/utils/evaluateRules.js"],"sourcesContent":["import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n"],"names":[],"mappings":";;;;;AAIY,MAAC,aAAa,GAAG,CAAC,KAAK,EAAE,OAAO,KAAK;AACjD,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC9B,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;AACtC,YAAY,MAAM,mBAAmB,GAAG,oBAAoB,CAAC,IAAI,EAAE,OAAO,CAAC;AAC3E,YAAY,IAAI,mBAAmB,EAAE;AACrC,gBAAgB,OAAO,mBAAmB;AAC1C,YAAY;AACZ,QAAQ;AACR,aAAa,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;AACxC,YAAY,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC;AAC5C,QAAQ;AACR,aAAa,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;AACvC,YAAY,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC;AACvE,YAAY,IAAI,mBAAmB,EAAE;AACrC,gBAAgB,OAAO,mBAAmB;AAC1C,YAAY;AACZ,QAAQ;AACR,aAAa;AACb,YAAY,MAAM,IAAI,aAAa,CAAC,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC,CAAC;AACrE,QAAQ;AACR,IAAI;AACJ,IAAI,MAAM,IAAI,aAAa,CAAC,CAAC,uBAAuB,CAAC,CAAC;AACtD;;;;","x_google_ignoreList":[0]}