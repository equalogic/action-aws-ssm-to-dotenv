{"version":3,"file":"sdk-stream-mixin.js","sources":["../../../../../node_modules/@smithy/util-stream/dist-es/sdk-stream-mixin.js"],"sourcesContent":["import { streamCollector } from \"@smithy/node-http-handler\";\nimport { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nimport { Readable } from \"stream\";\nimport { sdkStreamMixin as sdkStreamMixinReadableStream } from \"./sdk-stream-mixin.browser\";\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nexport const sdkStreamMixin = (stream) => {\n    if (!(stream instanceof Readable)) {\n        try {\n            return sdkStreamMixinReadableStream(stream);\n        }\n        catch (e) {\n            const name = stream?.__proto__?.constructor?.name || stream;\n            throw new Error(`Unexpected stream implementation, expect Stream.Readable instance, got ${name}`);\n        }\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await streamCollector(stream);\n    };\n    return Object.assign(stream, {\n        transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === undefined || Buffer.isEncoding(encoding)) {\n                return fromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength).toString(encoding);\n            }\n            else {\n                const decoder = new TextDecoder(encoding);\n                return decoder.decode(buf);\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            if (stream.readableFlowing !== null) {\n                throw new Error(\"The stream has been consumed by other callbacks.\");\n            }\n            if (typeof Readable.toWeb !== \"function\") {\n                throw new Error(\"Readable.toWeb() is not supported. Please ensure a polyfill is available.\");\n            }\n            transformed = true;\n            return Readable.toWeb(stream);\n        },\n    });\n};\n"],"names":["sdkStreamMixinReadableStream"],"mappings":";;;;;;;;;;;;;;;AAIA,MAAM,mCAAmC,GAAG,0CAA0C;AAC1E,MAAC,cAAc,GAAG,CAAC,MAAM,KAAK;AAC1C,IAAI,IAAI,EAAE,MAAM,YAAY,QAAQ,CAAC,EAAE;AACvC,QAAQ,IAAI;AACZ,YAAY,OAAOA,gBAA4B,CAAC,MAAM,CAAC;AACvD,QAAQ;AACR,QAAQ,OAAO,CAAC,EAAE;AAClB,YAAY,MAAM,IAAI,GAAG,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,IAAI,MAAM;AACvE,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,uEAAuE,EAAE,IAAI,CAAC,CAAC,CAAC;AAC7G,QAAQ;AACR,IAAI;AACJ,IAAI,IAAI,WAAW,GAAG,KAAK;AAC3B,IAAI,MAAM,oBAAoB,GAAG,YAAY;AAC7C,QAAQ,IAAI,WAAW,EAAE;AACzB,YAAY,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC;AAChE,QAAQ;AACR,QAAQ,WAAW,GAAG,IAAI;AAC1B,QAAQ,OAAO,MAAM,eAAe,CAAC,MAAM,CAAC;AAC5C,IAAI,CAAC;AACL,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;AACjC,QAAQ,oBAAoB;AAC5B,QAAQ,iBAAiB,EAAE,OAAO,QAAQ,KAAK;AAC/C,YAAY,MAAM,GAAG,GAAG,MAAM,oBAAoB,EAAE;AACpD,YAAY,IAAI,QAAQ,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AACvE,gBAAgB,OAAO,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACrG,YAAY;AACZ,iBAAiB;AACjB,gBAAgB,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC;AACzD,gBAAgB,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;AAC1C,YAAY;AACZ,QAAQ,CAAC;AACT,QAAQ,oBAAoB,EAAE,MAAM;AACpC,YAAY,IAAI,WAAW,EAAE;AAC7B,gBAAgB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC;AACpE,YAAY;AACZ,YAAY,IAAI,MAAM,CAAC,eAAe,KAAK,IAAI,EAAE;AACjD,gBAAgB,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC;AACnF,YAAY;AACZ,YAAY,IAAI,OAAO,QAAQ,CAAC,KAAK,KAAK,UAAU,EAAE;AACtD,gBAAgB,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC;AAC5G,YAAY;AACZ,YAAY,WAAW,GAAG,IAAI;AAC9B,YAAY,OAAO,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACzC,QAAQ,CAAC;AACT,KAAK,CAAC;AACN;;;;","x_google_ignoreList":[0]}