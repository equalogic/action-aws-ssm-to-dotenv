{"version":3,"file":"retryMiddleware.js","sources":["../../../../../node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js"],"sourcesContent":["import { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@smithy/service-error-classification\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@smithy/util-retry\";\nimport { v4 } from \"uuid\";\nimport { isStreamingPayload } from \"./isStreamingPayload/isStreamingPayload\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        const isRequest = HttpRequest.isInstance(request);\n        if (isRequest) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (isRequest) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                if (isRequest && isStreamingPayload(request)) {\n                    (context.logger instanceof NoOpLogger ? console : context.logger)?.warn(\"An error was encountered in a non-retryable streaming request.\");\n                    throw lastError;\n                }\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        error,\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}