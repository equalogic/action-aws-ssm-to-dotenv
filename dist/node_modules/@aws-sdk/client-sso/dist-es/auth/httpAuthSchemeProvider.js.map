{"version":3,"file":"httpAuthSchemeProvider.js","sources":["../../../../../../node_modules/@aws-sdk/client-sso/dist-es/auth/httpAuthSchemeProvider.js"],"sourcesContent":["import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultSSOHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"awsssoportal\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSSOHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"GetRoleCredentials\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccountRoles\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccounts\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"Logout\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return Object.assign(config_0, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n"],"names":[],"mappings":";;;;AAEY,MAAC,0CAA0C,GAAG,OAAO,MAAM,EAAE,OAAO,EAAE,KAAK,KAAK;AAC5F,IAAI,OAAO;AACX,QAAQ,SAAS,EAAE,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS;AACtD,QAAQ,MAAM,EAAE,CAAC,MAAM,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AACzD,YAAY,CAAC,MAAM;AACnB,gBAAgB,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC;AAC1F,YAAY,CAAC,GAAG;AAChB,KAAK;AACL;AACA,SAAS,gCAAgC,CAAC,cAAc,EAAE;AAC1D,IAAI,OAAO;AACX,QAAQ,QAAQ,EAAE,gBAAgB;AAClC,QAAQ,iBAAiB,EAAE;AAC3B,YAAY,IAAI,EAAE,cAAc;AAChC,YAAY,MAAM,EAAE,cAAc,CAAC,MAAM;AACzC,SAAS;AACT,QAAQ,mBAAmB,EAAE,CAAC,MAAM,EAAE,OAAO,MAAM;AACnD,YAAY,iBAAiB,EAAE;AAC/B,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,aAAa;AACb,SAAS,CAAC;AACV,KAAK;AACL;AACA,SAAS,mCAAmC,CAAC,cAAc,EAAE;AAC7D,IAAI,OAAO;AACX,QAAQ,QAAQ,EAAE,mBAAmB;AACrC,KAAK;AACL;AACY,MAAC,gCAAgC,GAAG,CAAC,cAAc,KAAK;AACpE,IAAI,MAAM,OAAO,GAAG,EAAE;AACtB,IAAI,QAAQ,cAAc,CAAC,SAAS;AACpC,QAAQ,KAAK,oBAAoB,EAAE;AACnC,YAAY,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAe,CAAC,CAAC;AAC7E,YAAY;AACZ,QAAQ;AACR,QAAQ,KAAK,kBAAkB,EAAE;AACjC,YAAY,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAe,CAAC,CAAC;AAC7E,YAAY;AACZ,QAAQ;AACR,QAAQ,KAAK,cAAc,EAAE;AAC7B,YAAY,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAe,CAAC,CAAC;AAC7E,YAAY;AACZ,QAAQ;AACR,QAAQ,KAAK,QAAQ,EAAE;AACvB,YAAY,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAe,CAAC,CAAC;AAC7E,YAAY;AACZ,QAAQ;AACR,QAAQ,SAAS;AACjB,YAAY,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC,cAAc,CAAC,CAAC;AAC1E,QAAQ;AACR;AACA,IAAI,OAAO,OAAO;AAClB;AACY,MAAC,2BAA2B,GAAG,CAAC,MAAM,KAAK;AACvD,IAAI,MAAM,QAAQ,GAAG,wBAAwB,CAAC,MAAM,CAAC;AACrD,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;AACnC,QAAQ,oBAAoB,EAAE,iBAAiB,CAAC,MAAM,CAAC,oBAAoB,IAAI,EAAE,CAAC;AAClF,KAAK,CAAC;AACN;;;;","x_google_ignoreList":[0]}