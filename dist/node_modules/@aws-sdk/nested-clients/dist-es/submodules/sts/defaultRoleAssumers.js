import { getDefaultRoleAssumerWithWebIdentity as getDefaultRoleAssumerWithWebIdentity$1, getDefaultRoleAssumer as getDefaultRoleAssumer$1 } from './defaultStsRoleAssumers.js';
import { STSClient } from './STSClient.js';

const getCustomizableStsClientCtor = (baseCtor, customizations) => {
    if (!customizations)
        return baseCtor;
    else
        return class CustomizableSTSClient extends baseCtor {
            constructor(config) {
                super(config);
                for (const customization of customizations) {
                    this.middlewareStack.use(customization);
                }
            }
        };
};
const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => getDefaultRoleAssumer$1(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));
const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => getDefaultRoleAssumerWithWebIdentity$1(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));

export { getDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity };
//# sourceMappingURL=defaultRoleAssumers.js.map
