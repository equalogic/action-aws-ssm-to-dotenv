{"version":3,"file":"fromSso.js","sources":["../../../../../node_modules/@aws-sdk/token-providers/dist-es/fromSso.js"],"sourcesContent":["import { TokenProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, getSSOTokenFromFile, loadSsoSessionData, parseKnownFiles, } from \"@smithy/shared-ini-file-loader\";\nimport { EXPIRE_WINDOW_MS, REFRESH_MESSAGE } from \"./constants\";\nimport { getNewSsoOidcToken } from \"./getNewSsoOidcToken\";\nimport { validateTokenExpiry } from \"./validateTokenExpiry\";\nimport { validateTokenKey } from \"./validateTokenKey\";\nimport { writeSSOTokenToFile } from \"./writeSSOTokenToFile\";\nconst lastRefreshAttemptTime = new Date(0);\nexport const fromSso = (_init = {}) => async ({ callerClientConfig } = {}) => {\n    const init = {\n        ..._init,\n        parentClientConfig: {\n            ...callerClientConfig,\n            ..._init.parentClientConfig,\n        },\n    };\n    init.logger?.debug(\"@aws-sdk/token-providers - fromSso\");\n    const profiles = await parseKnownFiles(init);\n    const profileName = getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    });\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n    }\n    else if (!profile[\"sso_session\"]) {\n        throw new TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n    }\n    const ssoSessionName = profile[\"sso_session\"];\n    const ssoSessions = await loadSsoSessionData(init);\n    const ssoSession = ssoSessions[ssoSessionName];\n    if (!ssoSession) {\n        throw new TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n    }\n    for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n        if (!ssoSession[ssoSessionRequiredKey]) {\n            throw new TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n        }\n    }\n    const ssoStartUrl = ssoSession[\"sso_start_url\"];\n    const ssoRegion = ssoSession[\"sso_region\"];\n    let ssoToken;\n    try {\n        ssoToken = await getSSOTokenFromFile(ssoSessionName);\n    }\n    catch (e) {\n        throw new TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`, false);\n    }\n    validateTokenKey(\"accessToken\", ssoToken.accessToken);\n    validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n    const { accessToken, expiresAt } = ssoToken;\n    const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n    if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n        return existingToken;\n    }\n    if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n    validateTokenKey(\"clientId\", ssoToken.clientId, true);\n    validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n    validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n    try {\n        lastRefreshAttemptTime.setTime(Date.now());\n        const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion, init);\n        validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n        validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n        const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);\n        try {\n            await writeSSOTokenToFile(ssoSessionName, {\n                ...ssoToken,\n                accessToken: newSsoOidcToken.accessToken,\n                expiresAt: newTokenExpiration.toISOString(),\n                refreshToken: newSsoOidcToken.refreshToken,\n            });\n        }\n        catch (error) {\n        }\n        return {\n            token: newSsoOidcToken.accessToken,\n            expiration: newTokenExpiration,\n        };\n    }\n    catch (error) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}