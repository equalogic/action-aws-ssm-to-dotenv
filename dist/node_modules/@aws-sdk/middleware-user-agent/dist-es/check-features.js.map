{"version":3,"file":"check-features.js","sources":["../../../../../node_modules/@aws-sdk/middleware-user-agent/dist-es/check-features.js"],"sourcesContent":["import { setFeature } from \"@aws-sdk/core\";\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nexport async function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            setFeature(context, key, value);\n        }\n    }\n}\n"],"names":[],"mappings":";;AACA,MAAM,yBAAyB,GAAG,aAAa;AACxC,eAAe,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE;AAC3D,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;AAChC,IAAI,IAAI,OAAO,EAAE,OAAO,GAAG,iBAAiB,CAAC,KAAK,aAAa,EAAE;AACjE,QAAQ,UAAU,CAAC,OAAO,EAAE,sBAAsB,EAAE,GAAG,CAAC;AACxD,IAAI;AACJ,IAAI,IAAI,OAAO,MAAM,CAAC,aAAa,KAAK,UAAU,EAAE;AACpD,QAAQ,MAAM,aAAa,GAAG,MAAM,MAAM,CAAC,aAAa,EAAE;AAC1D,QAAQ,IAAI,OAAO,aAAa,CAAC,wBAAwB,KAAK,UAAU,EAAE;AAC1E,YAAY,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAE;AACvE,gBAAgB,UAAU,CAAC,OAAO,EAAE,qBAAqB,EAAE,GAAG,CAAC;AAC/D,YAAY;AACZ,iBAAiB;AACjB,gBAAgB,UAAU,CAAC,OAAO,EAAE,qBAAqB,EAAE,GAAG,CAAC;AAC/D,YAAY;AACZ,QAAQ;AACR,aAAa;AACb,YAAY,UAAU,CAAC,OAAO,EAAE,mBAAmB,EAAE,GAAG,CAAC;AACzD,QAAQ;AACR,IAAI;AACJ,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU,EAAE;AAC5D,QAAQ,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU;AAC7C,QAAQ,IAAI,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE;AAChF,YAAY,UAAU,CAAC,OAAO,EAAE,qBAAqB,EAAE,GAAG,CAAC;AAC3D,QAAQ;AACR,QAAQ,QAAQ,MAAM,MAAM,CAAC,qBAAqB,IAAI;AACtD,YAAY,KAAK,UAAU;AAC3B,gBAAgB,UAAU,CAAC,OAAO,EAAE,0BAA0B,EAAE,GAAG,CAAC;AACpE,gBAAgB;AAChB,YAAY,KAAK,WAAW;AAC5B,gBAAgB,UAAU,CAAC,OAAO,EAAE,2BAA2B,EAAE,GAAG,CAAC;AACrE,gBAAgB;AAChB,YAAY,KAAK,UAAU;AAC3B,gBAAgB,UAAU,CAAC,OAAO,EAAE,0BAA0B,EAAE,GAAG,CAAC;AACpE,gBAAgB;AAChB;AACA,IAAI;AACJ,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,gBAAgB,EAAE,sBAAsB,EAAE,QAAQ;AAC/E,IAAI,IAAI,QAAQ,EAAE,OAAO,EAAE;AAC3B,QAAQ,MAAM,WAAW,GAAG,QAAQ;AACpC,QAAQ,IAAI,WAAW,CAAC,SAAS,EAAE;AACnC,YAAY,UAAU,CAAC,OAAO,EAAE,qBAAqB,EAAE,GAAG,CAAC;AAC3D,QAAQ;AACR,QAAQ,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC,EAAE;AAC9E,YAAY,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC;AAC3C,QAAQ;AACR,IAAI;AACJ;;;;","x_google_ignoreList":[0]}