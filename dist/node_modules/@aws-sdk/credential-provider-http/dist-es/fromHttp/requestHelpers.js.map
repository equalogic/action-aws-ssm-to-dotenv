{"version":3,"file":"requestHelpers.js","sources":["../../../../../../node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/requestHelpers.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { parseRfc3339DateTime } from \"@smithy/smithy-client\";\nimport { sdkStreamMixin } from \"@smithy/util-stream\";\nexport function createGetRequest(url) {\n    return new HttpRequest({\n        protocol: url.protocol,\n        hostname: url.hostname,\n        port: Number(url.port),\n        path: url.pathname,\n        query: Array.from(url.searchParams.entries()).reduce((acc, [k, v]) => {\n            acc[k] = v;\n            return acc;\n        }, {}),\n        fragment: url.hash,\n    });\n}\nexport async function getCredentials(response, logger) {\n    const stream = sdkStreamMixin(response.body);\n    const str = await stream.transformToString();\n    if (response.statusCode === 200) {\n        const parsed = JSON.parse(str);\n        if (typeof parsed.AccessKeyId !== \"string\" ||\n            typeof parsed.SecretAccessKey !== \"string\" ||\n            typeof parsed.Token !== \"string\" ||\n            typeof parsed.Expiration !== \"string\") {\n            throw new CredentialsProviderError(\"HTTP credential provider response not of the required format, an object matching: \" +\n                \"{ AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }\", { logger });\n        }\n        return {\n            accessKeyId: parsed.AccessKeyId,\n            secretAccessKey: parsed.SecretAccessKey,\n            sessionToken: parsed.Token,\n            expiration: parseRfc3339DateTime(parsed.Expiration),\n        };\n    }\n    if (response.statusCode >= 400 && response.statusCode < 500) {\n        let parsedBody = {};\n        try {\n            parsedBody = JSON.parse(str);\n        }\n        catch (e) { }\n        throw Object.assign(new CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger }), {\n            Code: parsedBody.Code,\n            Message: parsedBody.Message,\n        });\n    }\n    throw new CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger });\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIO,SAAS,gBAAgB,CAAC,GAAG,EAAE;AACtC,IAAI,OAAO,IAAI,WAAW,CAAC;AAC3B,QAAQ,QAAQ,EAAE,GAAG,CAAC,QAAQ;AAC9B,QAAQ,QAAQ,EAAE,GAAG,CAAC,QAAQ;AAC9B,QAAQ,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;AAC9B,QAAQ,IAAI,EAAE,GAAG,CAAC,QAAQ;AAC1B,QAAQ,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK;AAC9E,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AACtB,YAAY,OAAO,GAAG;AACtB,QAAQ,CAAC,EAAE,EAAE,CAAC;AACd,QAAQ,QAAQ,EAAE,GAAG,CAAC,IAAI;AAC1B,KAAK,CAAC;AACN;AACO,eAAe,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE;AACvD,IAAI,MAAM,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC;AAChD,IAAI,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,iBAAiB,EAAE;AAChD,IAAI,IAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,EAAE;AACrC,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACtC,QAAQ,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ;AAClD,YAAY,OAAO,MAAM,CAAC,eAAe,KAAK,QAAQ;AACtD,YAAY,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ;AAC5C,YAAY,OAAO,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE;AACnD,YAAY,MAAM,IAAI,wBAAwB,CAAC,oFAAoF;AACnI,gBAAgB,8FAA8F,EAAE,EAAE,MAAM,EAAE,CAAC;AAC3H,QAAQ;AACR,QAAQ,OAAO;AACf,YAAY,WAAW,EAAE,MAAM,CAAC,WAAW;AAC3C,YAAY,eAAe,EAAE,MAAM,CAAC,eAAe;AACnD,YAAY,YAAY,EAAE,MAAM,CAAC,KAAK;AACtC,YAAY,UAAU,EAAE,oBAAoB,CAAC,MAAM,CAAC,UAAU,CAAC;AAC/D,SAAS;AACT,IAAI;AACJ,IAAI,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,IAAI,QAAQ,CAAC,UAAU,GAAG,GAAG,EAAE;AACjE,QAAQ,IAAI,UAAU,GAAG,EAAE;AAC3B,QAAQ,IAAI;AACZ,YAAY,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACxC,QAAQ;AACR,QAAQ,OAAO,CAAC,EAAE,EAAE;AACpB,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,wBAAwB,CAAC,CAAC,8BAA8B,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE;AAC9H,YAAY,IAAI,EAAE,UAAU,CAAC,IAAI;AACjC,YAAY,OAAO,EAAE,UAAU,CAAC,OAAO;AACvC,SAAS,CAAC;AACV,IAAI;AACJ,IAAI,MAAM,IAAI,wBAAwB,CAAC,CAAC,8BAA8B,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC;AAC1G;;;;","x_google_ignoreList":[0]}