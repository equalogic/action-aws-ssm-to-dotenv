import packageInfo from '../package.json.js';
import { defaultProvider } from '../../credential-provider-node/dist-es/defaultProvider.js';
import { createDefaultUserAgentProvider } from '../../util-user-agent-node/dist-es/defaultUserAgent.js';
import { NODE_APP_ID_CONFIG_OPTIONS } from '../../util-user-agent-node/dist-es/nodeAppIdConfigOptions.js';
import { NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS } from '../../../@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js';
import { NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS } from '../../../@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js';
import '../../../@smithy/types/dist-es/auth/auth.js';
import '../../../@smithy/types/dist-es/auth/HttpApiKeyAuth.js';
import '../../../@smithy/types/dist-es/endpoint.js';
import '../../../@smithy/types/dist-es/extensions/checksum.js';
import '../../../@smithy/types/dist-es/http.js';
import '../../../@smithy/types/dist-es/profile.js';
import '../../../@smithy/types/dist-es/transfer.js';
import { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS } from '../../../@smithy/config-resolver/dist-es/regionConfig/config.js';
import { Hash } from '../../../@smithy/hash-node/dist-es/index.js';
import { DEFAULT_RETRY_MODE } from '../../../@smithy/util-retry/dist-es/config.js';
import '../../../@smithy/util-retry/dist-es/DefaultRateLimiter.js';
import { NODE_RETRY_MODE_CONFIG_OPTIONS, NODE_MAX_ATTEMPT_CONFIG_OPTIONS } from '../../../@smithy/middleware-retry/dist-es/configurations.js';
import { loadConfigsForDefaultMode } from '../../../@smithy/smithy-client/dist-es/defaults-mode.js';
import { emitWarningIfUnsupportedVersion } from '../../../@smithy/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js';
import 'stream';
import { loadConfig } from '../../../@smithy/node-config-provider/dist-es/configLoader.js';
import { NodeHttpHandler } from '../../../@smithy/node-http-handler/dist-es/node-http-handler.js';
import 'http2';
import { streamCollector } from '../../../@smithy/node-http-handler/dist-es/stream-collector/index.js';
import { calculateBodyLength } from '../../../@smithy/util-body-length-node/dist-es/calculateBodyLength.js';
import { getRuntimeConfig as getRuntimeConfig$1 } from './runtimeConfig.shared.js';
import { resolveDefaultsModeConfig } from '../../../@smithy/util-defaults-mode-node/dist-es/resolveDefaultsModeConfig.js';
import { emitWarningIfUnsupportedVersion as emitWarningIfUnsupportedVersion$1 } from '../../core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js';
import { NODE_AUTH_SCHEME_PREFERENCE_OPTIONS } from '../../core/dist-es/submodules/httpAuthSchemes/aws_sdk/NODE_AUTH_SCHEME_PREFERENCE_OPTIONS.js';

const getRuntimeConfig = (config) => {
    emitWarningIfUnsupportedVersion(process.version);
    const defaultsMode = resolveDefaultsModeConfig(config);
    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);
    const clientSharedValues = getRuntimeConfig$1(config);
    emitWarningIfUnsupportedVersion$1(process.version);
    const loaderConfig = {
        profile: config?.profile,
        logger: clientSharedValues.logger,
    };
    return {
        ...clientSharedValues,
        ...config,
        runtime: "node",
        defaultsMode,
        authSchemePreference: config?.authSchemePreference ?? loadConfig(NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),
        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,
        credentialDefaultProvider: config?.credentialDefaultProvider ?? defaultProvider,
        defaultUserAgentProvider: config?.defaultUserAgentProvider ??
            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),
        maxAttempts: config?.maxAttempts ?? loadConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),
        region: config?.region ??
            loadConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),
        requestHandler: NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),
        retryMode: config?.retryMode ??
            loadConfig({
                ...NODE_RETRY_MODE_CONFIG_OPTIONS,
                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,
            }, config),
        sha256: config?.sha256 ?? Hash.bind(null, "sha256"),
        streamCollector: config?.streamCollector ?? streamCollector,
        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),
        useFipsEndpoint: config?.useFipsEndpoint ?? loadConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),
        userAgentAppId: config?.userAgentAppId ?? loadConfig(NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),
    };
};

export { getRuntimeConfig };
//# sourceMappingURL=runtimeConfig.js.map
