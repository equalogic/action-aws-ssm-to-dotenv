{"version":3,"file":"resolveCredentialSource.js","sources":["../../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveCredentialSource.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { chain, CredentialsProviderError } from \"@smithy/property-provider\";\nexport const resolveCredentialSource = (credentialSource, profileName, logger) => {\n    const sourceProvidersMap = {\n        EcsContainer: async (options) => {\n            const { fromHttp } = await import(\"@aws-sdk/credential-provider-http\");\n            const { fromContainerMetadata } = await import(\"@smithy/credential-provider-imds\");\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is EcsContainer\");\n            return async () => chain(fromHttp(options ?? {}), fromContainerMetadata(options))().then(setNamedProvider);\n        },\n        Ec2InstanceMetadata: async (options) => {\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata\");\n            const { fromInstanceMetadata } = await import(\"@smithy/credential-provider-imds\");\n            return async () => fromInstanceMetadata(options)().then(setNamedProvider);\n        },\n        Environment: async (options) => {\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is Environment\");\n            const { fromEnv } = await import(\"@aws-sdk/credential-provider-env\");\n            return async () => fromEnv(options)().then(setNamedProvider);\n        },\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource];\n    }\n    else {\n        throw new CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`, { logger });\n    }\n};\nconst setNamedProvider = (creds) => setCredentialFeature(creds, \"CREDENTIALS_PROFILE_NAMED_PROVIDER\", \"p\");\n"],"names":[],"mappings":";;;;AAEY,MAAC,uBAAuB,GAAG,CAAC,gBAAgB,EAAE,WAAW,EAAE,MAAM,KAAK;AAClF,IAAI,MAAM,kBAAkB,GAAG;AAC/B,QAAQ,YAAY,EAAE,OAAO,OAAO,KAAK;AACzC,YAAY,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,OAAO,iDAAmC,CAAC;AAClF,YAAY,MAAM,EAAE,qBAAqB,EAAE,GAAG,MAAM,OAAO,4DAAkC,CAAC;AAC9F,YAAY,MAAM,EAAE,KAAK,CAAC,sEAAsE,CAAC;AACjG,YAAY,OAAO,YAAY,KAAK,CAAC,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC,EAAE,qBAAqB,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;AACtH,QAAQ,CAAC;AACT,QAAQ,mBAAmB,EAAE,OAAO,OAAO,KAAK;AAChD,YAAY,MAAM,EAAE,KAAK,CAAC,6EAA6E,CAAC;AACxG,YAAY,MAAM,EAAE,oBAAoB,EAAE,GAAG,MAAM,OAAO,4DAAkC,CAAC;AAC7F,YAAY,OAAO,YAAY,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;AACrF,QAAQ,CAAC;AACT,QAAQ,WAAW,EAAE,OAAO,OAAO,KAAK;AACxC,YAAY,MAAM,EAAE,KAAK,CAAC,qEAAqE,CAAC;AAChG,YAAY,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,OAAO,gDAAkC,CAAC;AAChF,YAAY,OAAO,YAAY,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;AACxE,QAAQ,CAAC;AACT,KAAK;AACL,IAAI,IAAI,gBAAgB,IAAI,kBAAkB,EAAE;AAChD,QAAQ,OAAO,kBAAkB,CAAC,gBAAgB,CAAC;AACnD,IAAI;AACJ,SAAS;AACT,QAAQ,MAAM,IAAI,wBAAwB,CAAC,CAAC,yCAAyC,EAAE,WAAW,CAAC,MAAM,EAAE,gBAAgB,CAAC,EAAE,CAAC;AAC/H,YAAY,CAAC,4DAA4D,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC;AACvF,IAAI;AACJ;AACA,MAAM,gBAAgB,GAAG,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE,oCAAoC,EAAE,GAAG,CAAC;;;;","x_google_ignoreList":[0]}