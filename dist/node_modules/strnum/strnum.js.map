{"version":3,"file":"strnum.js","sources":["../../../node_modules/strnum/strnum.js"],"sourcesContent":["const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/;\n// const octRegex = /^0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n \nconst consider = {\n    hex :  true,\n    // oct: false,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true,\n    //skipLike: /regex/\n};\n\nexport default function toNumber(str, options = {}){\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    \n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if(str===\"0\") return 0;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return parse_int(trimmedStr, 16);\n    // }else if (options.oct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    }else if (trimmedStr.search(/.+[eE].+/)!== -1) { //eNotation\n        return resolveEnotation(str,trimmedStr,options);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        // +00.123 => [ , '+', '00', '.123', ..\n        if(match){\n            const sign = match[1] || \"\";\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            const decimalAdjacentToLeadingZeros = sign ? // 0., -00., 000.\n                str[leadingZeros.length+1] === \".\" \n                : str[leadingZeros.length] === \".\";\n\n            //trim ending zeros for floating number\n            if(!options.leadingZeros //leading zeros are not allowed\n                && (leadingZeros.length > 1 \n                    || (leadingZeros.length === 1 && !decimalAdjacentToLeadingZeros))){\n                // 00, 00.3, +03.24, 03, 03.24\n                return str;\n            }\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const parsedStr = String(num);\n\n                if( num === 0) return num;\n                if(parsedStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    if(parsedStr === \"0\") return num; //0.0\n                    else if(parsedStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( parsedStr === `${sign}${numTrimmedByZeros}`) return num;\n                    else return str;\n                }\n                \n                let n = leadingZeros? numTrimmedByZeros : trimmedStr;\n                if(leadingZeros){\n                    // -009 => -9\n                    return (n === parsedStr) || (sign+n === parsedStr) ? num : str\n                }else  {\n                    // +9\n                    return (n === parsedStr) || (n === sign+parsedStr) ? num : str\n                }\n            }\n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\nconst eNotationRegx = /^([-+])?(0*)(\\d*(\\.\\d*)?[eE][-\\+]?\\d+)$/;\nfunction resolveEnotation(str,trimmedStr,options){\n    if(!options.eNotation) return str;\n    const notation = trimmedStr.match(eNotationRegx); \n    if(notation){\n        let sign = notation[1] || \"\";\n        const eChar = notation[3].indexOf(\"e\") === -1 ? \"E\" : \"e\";\n        const leadingZeros = notation[2];\n        const eAdjacentToLeadingZeros = sign ? // 0E.\n            str[leadingZeros.length+1] === eChar \n            : str[leadingZeros.length] === eChar;\n\n        if(leadingZeros.length > 1 && eAdjacentToLeadingZeros) return str;\n        else if(leadingZeros.length === 1 \n            && (notation[3].startsWith(`.${eChar}`) || notation[3][0] === eChar)){\n                return Number(trimmedStr);\n        }else if(options.leadingZeros && !eAdjacentToLeadingZeros){ //accept with leading zeros\n            //remove leading 0s\n            trimmedStr = (notation[1] || \"\") + notation[3];\n            return Number(trimmedStr);\n        }else return str;\n    }else{\n        return str;\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substring(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\n\nfunction parse_int(numStr, base){\n    //polyfill\n    if(parseInt) return parseInt(numStr, base);\n    else if(Number.parseInt) return Number.parseInt(numStr, base);\n    else if(window && window.parseInt) return window.parseInt(numStr, base);\n    else throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\")\n}"],"names":[],"mappings":"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","x_google_ignoreList":[0]}